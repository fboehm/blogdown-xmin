<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computing on Frederick Boehm&#39;s Professional Website</title>
    <link>/categories/computing/</link>
    <description>Recent content in Computing on Frederick Boehm&#39;s Professional Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Jul 2017 10:13:52 +0000</lastBuildDate>
    
	<atom:link href="/categories/computing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Translating GEMMA’s Newton-Raphson Algorithm from C&#43;&#43; to R</title>
      <link>/post/2017/07/04/translating-gemma-s-newton-raphson-algorithm-from-c-to-r/</link>
      <pubDate>Tue, 04 Jul 2017 10:13:52 +0000</pubDate>
      
      <guid>/post/2017/07/04/translating-gemma-s-newton-raphson-algorithm-from-c-to-r/</guid>
      <description>Overview We want to translate GEMMA’s C++ code in the function MphNR (in the file mvlmm.cpp) into R code as a way to better understand the calculations and the algorithm.
MphNR C++ Code MphNR is defined in these lines in the GEMMA Github repository.
 R code for MphNR #double MphNR (const char func_name, const size_t max_iter, const double max_prec, const gsl_vector *eval, const gsl_matrix *X, const gsl_matrix *Y, gsl_matrix *Hi_all, gsl_matrix *xHi_all, gsl_matrix *Hiy_all, gsl_matrix *V_g, gsl_matrix *V_e, gsl_matrix *Hessian_inv, double &amp;amp;crt_a, double &amp;amp;crt_b, double &amp;amp;crt_c) #{ MphNR &amp;lt;- function(func_name = &amp;quot;R&amp;quot;, max_iter, max_prec, eval, X, Y, Hi_all, xHi_all, Hiy_all, V_g, V_e){ n_size &amp;lt;- length(eval) c_size &amp;lt;- nrow(X) d_size &amp;lt;- nrow(Y) dc_size &amp;lt;- d_size * c_size v_size &amp;lt;- d_size * (d_size + 1) / 2 XXt &amp;lt;- X %*% t(X) log(det(XXt)) -&amp;gt; lndetXXt if (func_name == &amp;quot;R&amp;quot;){ logl_const &amp;lt;- - 0.</description>
    </item>
    
    <item>
      <title>Deciphering GEMMA’s C&#43;&#43; Code</title>
      <link>/post/2017/07/04/deciphering-gemma-s-c-code/</link>
      <pubDate>Tue, 04 Jul 2017 10:13:51 +0000</pubDate>
      
      <guid>/post/2017/07/04/deciphering-gemma-s-c-code/</guid>
      <description>library(knitr) opts_chunk$set(eval = FALSE) My goal is to translate the C++ code in GEMMA/src/mvlmm.cpp to mathematical notation and, ultimately, to R code. Zhou’s C++ code uses the gsl C++ library.
CalcXHiY C++ code Let’s examine the function CalcXHiY which runs from line 357-384 of mvlmm.cpp. I reproduce them here:
void CalcXHiY(const gsl_vector *eval, const gsl_vector *D_l, const gsl_matrix *X, const gsl_matrix *UltVehiY, gsl_vector *xHiy) { size_t n_size=eval-&amp;gt;size, c_size=X-&amp;gt;size1, d_size=D_l-&amp;gt;size; gsl_vector_set_zero (xHiy); double x, delta, dl, y, d; for (size_t i=0; i&amp;lt;d_size; i++) { dl=gsl_vector_get(D_l, i); for (size_t j=0; j&amp;lt;c_size; j++) { d=0.</description>
    </item>
    
    <item>
      <title>A ‘page’ type for blogdown &amp; hugo lithium theme</title>
      <link>/post/2017/05/23/a-page-type-for-blogdown-hugo-lithium-theme/</link>
      <pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/05/23/a-page-type-for-blogdown-hugo-lithium-theme/</guid>
      <description>I didn’t like the fact that my ‘About’ and ‘Research’ pages included a Disqus section, as I don’t need comments on these materials. I decided to find a way to create pages - which are not blog posts - that don’t have the Disqus section. I’m using, as of right now, Yihui Xie’s hugo lithium theme, with a few small modifications that I’ve documented in my first blog post.
The Hugo documentation on types is quite good.</description>
    </item>
    
  </channel>
</rss>