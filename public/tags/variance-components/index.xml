<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Variance components on Frederick Boehm&#39;s Professional Website</title>
    <link>/tags/variance-components/</link>
    <description>Recent content in Variance components on Frederick Boehm&#39;s Professional Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Sep 2017 12:38:19 +0000</lastBuildDate>
    
	<atom:link href="/tags/variance-components/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Understanding REML for estimating variance components</title>
      <link>/post/2017/09/02/understanding-reml-for-estimating-variance-components/</link>
      <pubDate>Sat, 02 Sep 2017 12:38:19 +0000</pubDate>
      
      <guid>/post/2017/09/02/understanding-reml-for-estimating-variance-components/</guid>
      <description>Overview I used much of the summer of 2017 to study linear mixed effects models. I’m writing this blog post to document my experience. Perhaps readers will find it useful in designing their study plans for mixed models.
I found particularly useful Sections 8.4 and 8.5 of Wakefield (2013). The author describes in detail a general framework for linear mixed models before venturing into likelihood-based inference for these models. Particularly appealing to me, and differing from works of many others, is the emphasis of Wakefield (2013) on being explicit about conditioning.</description>
    </item>
    
    <item>
      <title>Translating GEMMA’s Newton-Raphson Algorithm from C&#43;&#43; to R</title>
      <link>/post/2017/07/04/translating-gemma-s-newton-raphson-algorithm-from-c-to-r/</link>
      <pubDate>Tue, 04 Jul 2017 10:13:52 +0000</pubDate>
      
      <guid>/post/2017/07/04/translating-gemma-s-newton-raphson-algorithm-from-c-to-r/</guid>
      <description>Overview We want to translate GEMMA’s C++ code in the function MphNR (in the file mvlmm.cpp) into R code as a way to better understand the calculations and the algorithm.
MphNR C++ Code MphNR is defined in these lines in the GEMMA Github repository.
 R code for MphNR #double MphNR (const char func_name, const size_t max_iter, const double max_prec, const gsl_vector *eval, const gsl_matrix *X, const gsl_matrix *Y, gsl_matrix *Hi_all, gsl_matrix *xHi_all, gsl_matrix *Hiy_all, gsl_matrix *V_g, gsl_matrix *V_e, gsl_matrix *Hessian_inv, double &amp;amp;crt_a, double &amp;amp;crt_b, double &amp;amp;crt_c) #{ MphNR &amp;lt;- function(func_name = &amp;quot;R&amp;quot;, max_iter, max_prec, eval, X, Y, Hi_all, xHi_all, Hiy_all, V_g, V_e){ n_size &amp;lt;- length(eval) c_size &amp;lt;- nrow(X) d_size &amp;lt;- nrow(Y) dc_size &amp;lt;- d_size * c_size v_size &amp;lt;- d_size * (d_size + 1) / 2 XXt &amp;lt;- X %*% t(X) log(det(XXt)) -&amp;gt; lndetXXt if (func_name == &amp;quot;R&amp;quot;){ logl_const &amp;lt;- - 0.</description>
    </item>
    
    <item>
      <title>Deciphering GEMMA’s C&#43;&#43; Code</title>
      <link>/post/2017/07/04/deciphering-gemma-s-c-code/</link>
      <pubDate>Tue, 04 Jul 2017 10:13:51 +0000</pubDate>
      
      <guid>/post/2017/07/04/deciphering-gemma-s-c-code/</guid>
      <description>library(knitr) opts_chunk$set(eval = FALSE) My goal is to translate the C++ code in GEMMA/src/mvlmm.cpp to mathematical notation and, ultimately, to R code. Zhou’s C++ code uses the gsl C++ library.
CalcXHiY C++ code Let’s examine the function CalcXHiY which runs from line 357-384 of mvlmm.cpp. I reproduce them here:
void CalcXHiY(const gsl_vector *eval, const gsl_vector *D_l, const gsl_matrix *X, const gsl_matrix *UltVehiY, gsl_vector *xHiy) { size_t n_size=eval-&amp;gt;size, c_size=X-&amp;gt;size1, d_size=D_l-&amp;gt;size; gsl_vector_set_zero (xHiy); double x, delta, dl, y, d; for (size_t i=0; i&amp;lt;d_size; i++) { dl=gsl_vector_get(D_l, i); for (size_t j=0; j&amp;lt;c_size; j++) { d=0.</description>
    </item>
    
    <item>
      <title>GEMMA&#39;s EM algorithm implemented in R</title>
      <link>/post/2017/05/16/gemma-em-in-r/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/05/16/gemma-em-in-r/</guid>
      <description>I need to estimate variance components for a linear mixed effects model. Specifically, I need to consider the model, from Zhou and Stephens (2014):
\[Y = BX + G + E\] where \(Y\) is a \(2\) by \(n\) matrix of (possibly correlated) phenotypes (for \(n\) subjects), \(B\) is a \(2\) by \(c\) matrix of allelic effect sizes (where \(c\) denotes the number of alleles per locus), \(X\) is a \(c\) by \(n\) matrix containing genotypes (or genotype probabilities), \(G\) is a \(2\) by \(n\) matrix of random effects and \(E\) is a \(2\) by \(n\) matrix of random errors, which are assumed to be independent of \(G\).</description>
    </item>
    
  </channel>
</rss>